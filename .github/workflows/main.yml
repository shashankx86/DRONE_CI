name: Building recovery

on:
  workflow_dispatch:

env:
  MANIFEST: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp -b twrp-11
  DEVICE: spes
  DT_LINK: https://github.com/shashankx86/android_device_xiaomi_spes-TWRP
  DT_PATH: device/xiaomi/spes
  CHAT_ID: ${{ secrets.TEST_CHAT_ID }}
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  TARGET: bootimage
  TZ: Asia/Calcutta

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@master
         
       - name: Initializing environment
         run: |
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
            docker rmi `docker images -q`
            sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix       
            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 
            sudo -E apt-get clean 
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2
            sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
            sudo chmod a+rx /usr/local/bin/repo
            sudo -E apt-get clean
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install curl libstdc++6 git wget repo rsync aria2
            git config --global user.name "${{github.actor}}"
            git config --global user.email "shashankspis20@gamil.com"
            git clone https://gitlab.com/OrangeFox/misc/scripts.git --depth=1 --single-branch
            cd scripts
            sudo -E bash setup/android_build_env.sh
            echo "::group::Install Android Sdk"
            sudo -E bash setup/install_android_sdk.sh
            
       - name: Sync recovery source and device tree
         run: |
             git clone ${{env.MANIFEST}}
             ls
             cd sync
             ls
             git clone ${{env.DT_LINK}} --depth=1 --single-branch ${{env.DT_PATH}}  
             repo sync -j4
       - name: Building TWRP
         run: |
              export ALLOW_MISSING_DEPENDENCIES=true
              cd ~/work
              . build/envsetup.sh && lunch twrp_${{env.DEVICE}}-eng mka ${{env.TARGET}}
       - name: Uploading recovery image
         run: |
               cd work/out/target/product/${{env.DEVICE}}
               curl -sL https://git.io/file-transfer | sh
               ./transfer wet recovery.img
               ./transfer wet *.zip
